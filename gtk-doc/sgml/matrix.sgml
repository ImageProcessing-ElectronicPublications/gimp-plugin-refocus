<refentry id="refocus-matrix">
<refmeta>
<refentrytitle>matrix</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>REFOCUS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>matrix</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



void        <link linkend="make-circle-convolution">make_circle_convolution</link>         (const <link linkend="REAL-CAPS">REAL</link> radius,
                                             <link linkend="CMat">CMat</link> *convolution,
                                             const <link linkend="gint">gint</link> m);
void        <link linkend="make-gaussian-convolution">make_gaussian_convolution</link>       (const <link linkend="REAL-CAPS">REAL</link> alpha,
                                             <link linkend="CMat">CMat</link> *convolution,
                                             const <link linkend="gint">gint</link> m);
void        <link linkend="convolve-star-mat">convolve_star_mat</link>               (<link linkend="CMat">CMat</link> *result,
                                             const <link linkend="CMat">CMat</link> *const mata,
                                             const <link linkend="CMat">CMat</link> *const matb);
<link linkend="CMat">CMat</link>*       <link linkend="compute-g-matrix">compute_g_matrix</link>                (const <link linkend="CMat">CMat</link> *const convolution,
                                             const <link linkend="gint">gint</link> m,
                                             const <link linkend="REAL-CAPS">REAL</link> gamma,
                                             const <link linkend="REAL-CAPS">REAL</link> noise_factor,
                                             const <link linkend="REAL-CAPS">REAL</link> musq,
                                             const <link linkend="gboolean">gboolean</link> symmetric);
void        <link linkend="finish-matrix">finish_matrix</link>                   (<link linkend="Mat">Mat</link> *mat);
void        <link linkend="finish-and-free-matrix">finish_and_free_matrix</link>          (<link linkend="Mat">Mat</link> *mat);
void        <link linkend="init-c-mat">init_c_mat</link>                      (<link linkend="CMat">CMat</link> *mat,
                                             const <link linkend="gint">gint</link> radius);
void        <link linkend="finish-c-mat">finish_c_mat</link>                    (<link linkend="CMat">CMat</link> *mat);
void        <link linkend="print-c-mat">print_c_mat</link>                     (<link linkend="FILE-CAPS">FILE</link> *file,
                                             const <link linkend="CMat">CMat</link> *const mat);
void        <link linkend="print-convolution-matrix">print_convolution_matrix</link>        (<link linkend="FILE-CAPS">FILE</link> *file,
                                             <link linkend="REAL-CAPS">REAL</link> mat[],
                                             <link linkend="gint">gint</link> m);
</synopsis>
</refsynopsisdiv>





<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="make-circle-convolution">make_circle_convolution ()</title>
<programlisting>void        make_circle_convolution         (const <link linkend="REAL-CAPS">REAL</link> radius,
                                             <link linkend="CMat">CMat</link> *convolution,
                                             const <link linkend="gint">gint</link> m);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>radius</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>convolution</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>m</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="make-gaussian-convolution">make_gaussian_convolution ()</title>
<programlisting>void        make_gaussian_convolution       (const <link linkend="REAL-CAPS">REAL</link> alpha,
                                             <link linkend="CMat">CMat</link> *convolution,
                                             const <link linkend="gint">gint</link> m);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>alpha</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>convolution</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>m</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="convolve-star-mat">convolve_star_mat ()</title>
<programlisting>void        convolve_star_mat               (<link linkend="CMat">CMat</link> *result,
                                             const <link linkend="CMat">CMat</link> *const mata,
                                             const <link linkend="CMat">CMat</link> *const matb);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>result</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>mata</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>matb</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="compute-g-matrix">compute_g_matrix ()</title>
<programlisting><link linkend="CMat">CMat</link>*       compute_g_matrix                (const <link linkend="CMat">CMat</link> *const convolution,
                                             const <link linkend="gint">gint</link> m,
                                             const <link linkend="REAL-CAPS">REAL</link> gamma,
                                             const <link linkend="REAL-CAPS">REAL</link> noise_factor,
                                             const <link linkend="REAL-CAPS">REAL</link> musq,
                                             const <link linkend="gboolean">gboolean</link> symmetric);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>convolution</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>m</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>gamma</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>noise_factor</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>musq</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>symmetric</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="finish-matrix">finish_matrix ()</title>
<programlisting>void        finish_matrix                   (<link linkend="Mat">Mat</link> *mat);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mat</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="finish-and-free-matrix">finish_and_free_matrix ()</title>
<programlisting>void        finish_and_free_matrix          (<link linkend="Mat">Mat</link> *mat);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mat</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="init-c-mat">init_c_mat ()</title>
<programlisting>void        init_c_mat                      (<link linkend="CMat">CMat</link> *mat,
                                             const <link linkend="gint">gint</link> radius);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mat</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>radius</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="finish-c-mat">finish_c_mat ()</title>
<programlisting>void        finish_c_mat                    (<link linkend="CMat">CMat</link> *mat);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>mat</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="print-c-mat">print_c_mat ()</title>
<programlisting>void        print_c_mat                     (<link linkend="FILE-CAPS">FILE</link> *file,
                                             const <link linkend="CMat">CMat</link> *const mat);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>file</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>mat</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="print-convolution-matrix">print_convolution_matrix ()</title>
<programlisting>void        print_convolution_matrix        (<link linkend="FILE-CAPS">FILE</link> *file,
                                             <link linkend="REAL-CAPS">REAL</link> mat[],
                                             <link linkend="gint">gint</link> m);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>file</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>mat</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>m</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>




</refentry>
