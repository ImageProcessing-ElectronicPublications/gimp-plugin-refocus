<refentry id="GimpPreview">
<refmeta>
<refentrytitle>GimpPreview</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>REFOCUS Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>GimpPreview</refname><refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv><title>Synopsis</title>
<synopsis>



#define     <link linkend="PREVIEW-FIXED-SIZE-CAPS">PREVIEW_FIXED_SIZE</link>
#define     <link linkend="PREVIEW-DEFAULT-SIZE-CAPS">PREVIEW_DEFAULT_SIZE</link>
struct      <link linkend="GimpPreviewEvent">GimpPreviewEvent</link>;
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gimp-preview-new">gimp_preview_new</link>                (<link linkend="GimpDrawable">GimpDrawable</link> *drawable);
<link linkend="GtkWidget">GtkWidget</link>*  <link linkend="gimp-preview-new-with-args">gimp_preview_new_with_args</link>      (<link linkend="GimpDrawable">GimpDrawable</link> *drawable,
                                             <link linkend="gint">gint</link> preview_size,
                                             <link linkend="gdouble">gdouble</link> scale_amount,
                                             <link linkend="gint">gint</link> allow_scale);
void        <link linkend="gimp-preview-update">gimp_preview_update</link>             (<link linkend="GimpPreview">GimpPreview</link> *preview);
<link linkend="gboolean">gboolean</link>    <link linkend="gimp-preview-draw-row">gimp_preview_draw_row</link>           (<link linkend="GimpPreview">GimpPreview</link> *preview,
                                             const <link linkend="gint">gint</link> event_id,
                                             <link linkend="GimpImageType">GimpImageType</link> type,
                                             const <link linkend="gint">gint</link> row,
                                             const <link linkend="guchar">guchar</link> *const data);
<link linkend="gboolean">gboolean</link>    <link linkend="gimp-preview-draw-unscaled-row">gimp_preview_draw_unscaled_row</link>  (<link linkend="GimpPreview">GimpPreview</link> *preview,
                                             const <link linkend="gint">gint</link> event_id,
                                             <link linkend="GimpImageType">GimpImageType</link> type,
                                             const <link linkend="gint">gint</link> row,
                                             const <link linkend="guchar">guchar</link> *const data);
void        <link linkend="gimp-preview-force-redraw">gimp_preview_force_redraw</link>       (<link linkend="GimpPreview">GimpPreview</link> *preview);
<link linkend="gboolean">gboolean</link>    <link linkend="gimp-preview-progress-set-fraction">gimp_preview_progress_set_fraction</link>
                                            (<link linkend="GimpPreview">GimpPreview</link> *preview,
                                             const <link linkend="gint">gint</link> event_id,
                                             <link linkend="double">double</link> fraction);

</synopsis>
</refsynopsisdiv>

<refsect1>
<title>Object Hierarchy</title>
<synopsis>

  <link linkend="GObject">GObject</link>
   +----<link linkend="GtkObject">GtkObject</link>
         +----<link linkend="GtkWidget">GtkWidget</link>
               +----<link linkend="GtkContainer">GtkContainer</link>
                     +----GimpPreview
</synopsis>

</refsect1>


<refsect1>
<title>Signal Prototypes</title>
<synopsis>

&quot;<link linkend="GimpPreview-preview-changed">preview-changed</link>&quot;
            void        user_function      (<link linkend="GimpPreview">GimpPreview</link> *gimppreview,
                                            <link linkend="gpointer">gpointer</link> user_data);
&quot;<link linkend="GimpPreview-update-preview">update-preview</link>&quot;
            void        user_function      (<link linkend="GimpPreview">GimpPreview</link> *gimppreview,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);
</synopsis>
</refsect1>


<refsect1>
<title>Description</title>
<para>

</para>
</refsect1>

<refsect1>
<title>Details</title>
<refsect2>
<title><anchor id="PREVIEW-FIXED-SIZE-CAPS">PREVIEW_FIXED_SIZE</title>
<programlisting>#define PREVIEW_FIXED_SIZE           0
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="PREVIEW-DEFAULT-SIZE-CAPS">PREVIEW_DEFAULT_SIZE</title>
<programlisting>#define PREVIEW_DEFAULT_SIZE         -1
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="GimpPreviewEvent">struct GimpPreviewEvent</title>
<programlisting>struct GimpPreviewEvent
{
  gint event_id;                /* Id of this event */
  gdouble scale;                /* Scale of preview */

  /* Left/Top of requested unscaled data in image coordinates */
  gint image_x;
  gint image_y;

  /* Width/Height of requested unscaled data in image coordinates */
  gint image_width;
  gint image_height;

  /* Left/Top of preview in preview coordinates */
  gint preview_x;
  gint preview_y;

  /* Width/Height of the preview */
  gint preview_width;
  gint preview_height;

  /* Contains scaled image data as RGBA (4 bytes per pixel).
     The size of the array is 4 * preview_height * preview_width bytes */
  guchar *scaled_data;
};
</programlisting>
<para>
</para>
<para>

</para><informaltable pgwide="1" frame="none" role="struct">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row>
<entry><link linkend="gint">gint</link> <structfield>event_id</structfield></entry>
<entry> Id of this event. This is needed for gimp_preview_draw_row,
gimp_preview_draw_unscaled_row and gimp_preview_progress_set_fraction.
</entry>
</row>
<row>
<entry><link linkend="gdouble">gdouble</link> <structfield>scale</structfield></entry>
<entry> Current scale of the preview.
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>image_x</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>image_y</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>image_width</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>image_height</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>preview_x</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>preview_y</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>preview_width</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="gint">gint</link> <structfield>preview_height</structfield></entry>
<entry>
</entry>
</row>
<row>
<entry><link linkend="guchar">guchar</link> *<structfield>scaled_data</structfield></entry>
<entry>

</entry>
</row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gimp-preview-new">gimp_preview_new ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gimp_preview_new                (<link linkend="GimpDrawable">GimpDrawable</link> *drawable);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>drawable</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gimp-preview-new-with-args">gimp_preview_new_with_args ()</title>
<programlisting><link linkend="GtkWidget">GtkWidget</link>*  gimp_preview_new_with_args      (<link linkend="GimpDrawable">GimpDrawable</link> *drawable,
                                             <link linkend="gint">gint</link> preview_size,
                                             <link linkend="gdouble">gdouble</link> scale_amount,
                                             <link linkend="gint">gint</link> allow_scale);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>drawable</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>preview_size</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>scale_amount</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><parameter>allow_scale</parameter>&nbsp;:</entry>
<entry>
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gimp-preview-update">gimp_preview_update ()</title>
<programlisting>void        gimp_preview_update             (<link linkend="GimpPreview">GimpPreview</link> *preview);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>preview</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gimp-preview-draw-row">gimp_preview_draw_row ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gimp_preview_draw_row           (<link linkend="GimpPreview">GimpPreview</link> *preview,
                                             const <link linkend="gint">gint</link> event_id,
                                             <link linkend="GimpImageType">GimpImageType</link> type,
                                             const <link linkend="gint">gint</link> row,
                                             const <link linkend="guchar">guchar</link> *const data);</programlisting>
<para>
Draw one scaled row of data in the preview.
This function handles conversion to RGB and checkerboarding of
transparent areas.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>preview</parameter>&nbsp;:</entry>
<entry> the <link linkend="GimpPreview">GimpPreview</link>
</entry></row>
<row><entry align="right"><parameter>event_id</parameter>&nbsp;:</entry>
<entry> event_id that was sent with the <link linkend="GimpPreviewEvent">GimpPreviewEvent</link>.
</entry></row>
<row><entry align="right"><parameter>type</parameter>&nbsp;:</entry>
<entry> the format of the data (e.g. <literal>GIMP_RGBA_IMAGE</literal>).
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry>the relative number of the row within the preview.
The top row of the preview is number 0.
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> pixels for the preview. It must have a length of
event-&gt;preview_width pixels.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Returns FALSE when the event-id is not current.
This means that this request and all subsequent requests
with the same event-id will be ignored by the preview.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gimp-preview-draw-unscaled-row">gimp_preview_draw_unscaled_row ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gimp_preview_draw_unscaled_row  (<link linkend="GimpPreview">GimpPreview</link> *preview,
                                             const <link linkend="gint">gint</link> event_id,
                                             <link linkend="GimpImageType">GimpImageType</link> type,
                                             const <link linkend="gint">gint</link> row,
                                             const <link linkend="guchar">guchar</link> *const data);</programlisting>
<para>
Draw one unscaled row of data in the preview.
This function handles scaling, conversion to RGB and checkerboarding of
transparent areas.
A nice feature is that this function will draw several lines of
the preview when scale &gt; 1.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>preview</parameter>&nbsp;:</entry>
<entry> the <link linkend="GimpPreview">GimpPreview</link>
</entry></row>
<row><entry align="right"><parameter>event_id</parameter>&nbsp;:</entry>
<entry> event_id that was sent with the <link linkend="GimpPreviewEvent">GimpPreviewEvent</link>.
</entry></row>
<row><entry align="right"><parameter>type</parameter>&nbsp;:</entry>
<entry> the format of the data (e.g. <literal>GIMP_RGBA_IMAGE</literal>).
</entry></row>
<row><entry align="right"><parameter>row</parameter>&nbsp;:</entry>
<entry>row is the relative position of the row w.r.t. preview_event-&gt;image_y.
The top row has number 0.
</entry></row>
<row><entry align="right"><parameter>data</parameter>&nbsp;:</entry>
<entry> pixels for the preview. The first pixel in <parameter>data</parameter> has x-coordinate
preview_event-&gt;image_x in the image. <parameter>data</parameter> must have a length of
preview_event-&gt;image_width pixels.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Returns FALSE when the event-id is not current.
This means that this request and all subsequent requests
with the same event-id will be ignored by the preview.
</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gimp-preview-force-redraw">gimp_preview_force_redraw ()</title>
<programlisting>void        gimp_preview_force_redraw       (<link linkend="GimpPreview">GimpPreview</link> *preview);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>preview</parameter>&nbsp;:</entry>
<entry>


</entry></row>
</tbody></tgroup></informaltable></refsect2>
<refsect2>
<title><anchor id="gimp-preview-progress-set-fraction">gimp_preview_progress_set_fraction ()</title>
<programlisting><link linkend="gboolean">gboolean</link>    gimp_preview_progress_set_fraction
                                            (<link linkend="GimpPreview">GimpPreview</link> *preview,
                                             const <link linkend="gint">gint</link> event_id,
                                             <link linkend="double">double</link> fraction);</programlisting>
<para>
Set the progress bar of the preview to <parameter>fraction</parameter> completed.</para>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>preview</parameter>&nbsp;:</entry>
<entry> the <link linkend="GimpPreview">GimpPreview</link>.
</entry></row>
<row><entry align="right"><parameter>event_id</parameter>&nbsp;:</entry>
<entry> event_id that was sent with the <link linkend="GimpPreviewEvent">GimpPreviewEvent</link>.
</entry></row>
<row><entry align="right"><parameter>fraction</parameter>&nbsp;:</entry>
<entry> the fraction completed.
</entry></row>
<row><entry align="right"><emphasis>Returns</emphasis> :</entry><entry> Returns FALSE when the event-id is not current.
This means that this request and all subsequent requests
with the same event-id will be ignored by the preview.
</entry></row>
</tbody></tgroup></informaltable></refsect2>

</refsect1>

<refsect1>
<title>Signals</title>
<refsect2><title><anchor id="GimpPreview-preview-changed">The &quot;preview-changed&quot; signal</title>
<programlisting>void        user_function                  (<link linkend="GimpPreview">GimpPreview</link> *gimppreview,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gimppreview</parameter>&nbsp;:</entry>
<entry>the object which received the signal.

</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>user data set when the signal handler was connected.</entry></row>
</tbody></tgroup></informaltable></refsect2><refsect2><title><anchor id="GimpPreview-update-preview">The &quot;update-preview&quot; signal</title>
<programlisting>void        user_function                  (<link linkend="GimpPreview">GimpPreview</link> *gimppreview,
                                            <link linkend="gpointer">gpointer</link> arg1,
                                            <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<para>

</para><informaltable pgwide="1" frame="none" role="params">
<tgroup cols="2">
<colspec colwidth="2*">
<colspec colwidth="8*">
<tbody>
<row><entry align="right"><parameter>gimppreview</parameter>&nbsp;:</entry>
<entry>the object which received the signal.
</entry></row>
<row><entry align="right"><parameter>arg1</parameter>&nbsp;:</entry>
<entry>

</entry></row>
<row><entry align="right"><parameter>user_data</parameter>&nbsp;:</entry>
<entry>user data set when the signal handler was connected.</entry></row>
</tbody></tgroup></informaltable></refsect2>
</refsect1>



</refentry>
